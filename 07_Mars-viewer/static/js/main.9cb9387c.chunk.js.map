{"version":3,"sources":["API/Api.ts","Store/LoadStatusReducer.ts","Store/ImagesReducer.ts","Features/Heart.tsx","Store/FavoriteReducer.ts","Features/PhotosPage.tsx","Features/Favorites.tsx","Features/Routes.tsx","Features/marsGallery.tsx","App.tsx","reportWebVitals.ts","Store/State.ts","index.tsx"],"names":["instance","axios","create","baseURL","params","api_key","process","API","numberOfSoul","get","initialState","loadingStatus","Heart","props","FavoriteImg","useSelector","state","Favorite","imgSelected","length","filter","elem","id","imgProps","currentOpacity","onClick","onHeartClick","width","height","viewBox","fill","className","xmlns","opacity","d","PhotosPage","inputRef","createRef","Images","Status","dispatch","useDispatch","type","payload","addFavoriteAC","min","max","ref","style","current","value","then","res","data","photos","catch","console","log","map","src","img_src","alt","Favorites","removeFavoriteAC","Routes","path","exact","render","MarsGallery","activeClassName","to","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","isImgSame","newState","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9cb9387c.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://api.nasa.gov/mars-photos/api/v1/rovers/perseverance/',\r\n    params: {\r\n        api_key: `${process.env.REACT_APP_UNSPLASH_CLIENT_ID}`\r\n    }\r\n})\r\n\r\nexport const API = {\r\n    getPhotos(numberOfSoul:number) {\r\n        const promise = instance.get<any>(`photos?sol=${numberOfSoul}`);\r\n        return promise;\r\n    }\r\n}\r\n\r\n\r\n","export type InitialStateType={loadingStatus: string}\r\nexport const initialState:InitialStateType ={loadingStatus: \"Photos are not loaded\"};\r\n\r\n\r\nexport type actionType = {type: string, payload:number}\r\n\r\nexport const LoadStatusReducer = (state = initialState, action: actionType): InitialStateType => {\r\n switch (action.type) {\r\n\r\n  case \"setLoadStatus\": {\r\n    if (action.payload === 0 ) {return state= {loadingStatus: \"No photos for this sol\"}}\r\n    else { return state= {loadingStatus: \"Load success\"} }\r\n  }\r\n\r\n  case \"setLoadingStatus\": {\r\n    return state= {loadingStatus: \"Loading...\"}\r\n   }\r\n\r\n  default: return state;\r\n }\r\n};\r\n\r\n\r\nexport const setLoadingStatusAC = () => { return {type: \"setLoadingStatus\"} };\r\nexport const setLoadStatusAC = (length:number) => { return {type: \"setLoadStatus\", payload: length} };\r\n\r\n\r\n","\r\nexport type stateItem = {id:number, img_src: string}\r\n\r\nexport const initialState:stateItem[] =[];\r\n\r\n\r\nexport type actionType = {type: \"addData\", payload: stateItem[]}\r\n\r\nexport const ImagesReducer = (state = initialState, action: actionType): stateItem[] => {\r\n switch (action.type) {\r\n  case \"addData\": {\r\n   return state=[...action.payload]\r\n  }\r\n  default: return state;\r\n }\r\n};\r\n\r\n\r\n\r\nexport const addDataAC = (imgData:stateItem[]) => {return {type: \"addData\", payload: imgData}};\r\n\r\n\r\n","import React from 'react';\nimport \"./marsGallery.css\"\nimport {ImgPropsType} from \"../Features/PhotosPage\"\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppStoreType} from \"../Store/State\";\n\ntype HeartPropsType = {imgProps:ImgPropsType; onHeartClick: (imgProps:ImgPropsType) => void }\n\nfunction Heart(props:HeartPropsType) {\n\n    const FavoriteImg = useSelector<AppStoreType, ImgPropsType[]>(state => state.Favorite)\n\n\n    let imgSelected:ImgPropsType[]=[]\n     if (FavoriteImg.length>0) {imgSelected = FavoriteImg.filter (elem => elem.id === props.imgProps.id)}\n\n    let currentOpacity = imgSelected.length>0 ? 0.3 : 1\n\n\n    // console.log(FavoriteImg[0].id)\n\n\n\n    return (\n            <div onClick={() => props.onHeartClick(props.imgProps)}>\n\n            <svg width=\"15\" height=\"15\" viewBox=\"0 0 98 89\" fill=\"none\"\n            className={\"heart\"} xmlns=\"http://www.w3.org/2000/svg\" opacity={currentOpacity}>\n            <path d=\"M89.834 48.974L48.81 8.95 7.786 48.974 48.81 89l41.023-40.026z\" fill=\"#E30A17\">\n            </path><path d=\"M59.467 29.381c0 16.022-13.312 29.01-29.733 29.01C13.311 58.391 0 45.403 0 29.381\n             0 13.36 13.312.371 29.733.371c16.422 0 29.734 12.989 29.734 29.01z\" fill=\"#E30A17\"></path><path d=\"M98\n              29.01c0 16.022-13.312 29.01-29.734 29.01-16.42 0-29.733-12.988-29.733-29.01C38.533 12.988 51.845 0 68.266\n              0 84.688 0 98 12.988 98 29.01z\" fill=\"#E30A17\"></path></svg>\n        </div>\n    );\n}\n\nexport default Heart;\n","\r\nimport {ImgPropsType} from \"../Features/PhotosPage\"\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nexport const initialState: ImgPropsType[] =[];\r\n\r\nexport type actionType = {type: string, payload: ImgPropsType}\r\n\r\n\r\n\r\nexport const FavoriteReducer = (state = initialState, action: actionType): ImgPropsType[] => {\r\n\r\n switch (action.type) {\r\n  case \"addFavoriteImage\": {\r\n      const isImgSame = state.filter (elem => elem.id === action.payload.id)\r\n      if (isImgSame.length === 0) { return state=[...state, action.payload] }\r\n      else {\r\n          const newState = state.filter(elem => elem.id !== action.payload.id )\r\n          return newState\r\n      }\r\n      return state\r\n  };\r\n\r\n\r\n     case \"removeFavoriteImage\": {\r\n         const newState = state.filter(elem => elem.id !== action.payload.id )\r\n         return newState\r\n     }\r\n\r\n  default: return state;\r\n }\r\n};\r\n\r\n\r\nexport const addFavoriteAC = (imgProps:ImgPropsType) => {return {type: \"addFavoriteImage\", payload: imgProps}};\r\nexport const removeFavoriteAC = (imgProps:ImgPropsType) => {return {type: \"removeFavoriteImage\", payload: imgProps}};\r\n\r\n\r\n","import React, {createRef, DetailedHTMLProps, InputHTMLAttributes} from 'react';\nimport {API} from \"../API/Api\";\nimport {setLoadStatusAC, setLoadingStatusAC} from '../Store/LoadStatusReducer'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppStoreType} from \"../Store/State\";\nimport {stateItem} from \"../Store/ImagesReducer\"\nimport {InitialStateType} from \"../Store/LoadStatusReducer\"\nimport {addDataAC} from \"../Store/ImagesReducer\";\nimport \"./marsGallery.css\"\nimport Heart from \"./Heart\";\nimport {addFavoriteAC} from \"../Store/FavoriteReducer\";\n\nexport type ImgPropsType={id: number, img_src: string}\n\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\ntype InputRefType = DefaultInputPropsType & { current: any };\n\n\nfunction PhotosPage() {\n\n    const inputRef: InputRefType = createRef();\n\n    const Images=useSelector<AppStoreType, stateItem[]>(state => state.Images)\n    const Status=useSelector<AppStoreType, InitialStateType>(state => state.Status)\n    const dispatch=useDispatch()\n\n\n    const clickHandler = () => {\n        dispatch(setLoadingStatusAC())\n        API.getPhotos(inputRef.current.value)\n            .then((res) =>{\n                dispatch(addDataAC(res.data.photos))\n                dispatch(setLoadStatusAC(res.data.photos.length))\n            })\n            .catch((res) => console.log(res))\n    }\n\n\n    const onHeartClick=(imgProps:ImgPropsType)=>{\n     dispatch(addFavoriteAC(imgProps))\n    }\n\n\n    return (\n        <div>\n\n            <div> Select Sol and press \"load\"!</div>\n\n            <div>\n                <input type={\"number\"} min=\"1\" max=\"10\" ref={inputRef} style={{width: 150}}/>\n                <button onClick={clickHandler}>load</button>\n            </div>\n\n            {Images.length === 0\n            ? <div> {Status.loadingStatus}</div>\n            : Images.length === 0\n                ? null\n                : <div className={\"image_container\"}>\n                    { Images.map(elem => {\n                        return (\n                           <div key={elem.id}>\n                                <Heart onHeartClick={onHeartClick} imgProps={elem}/>\n                                <img key={elem.id}\n                                 className={\"image_item\"}\n                                 src={`${elem.img_src}`}\n                                 alt={\"click for favorite\"}  />\n                            </div>\n                        ) } ) }\n                </div> }\n\n        </div>\n    );\n}\n\nexport default PhotosPage;\n","import React from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppStoreType} from \"../Store/State\";\nimport \"./marsGallery.css\";\nimport Heart from './Heart'\nimport {removeFavoriteAC} from \"../Store/FavoriteReducer\";\nimport {ImgPropsType} from \"../Features/PhotosPage\"\n\n\nfunction Favorites() {\n\n    const FavoriteImg = useSelector<AppStoreType, ImgPropsType[]>(state => state.Favorite)\n    const dispatch=useDispatch()\n\n    const onHeartClick=(imgProps:ImgPropsType)=>{\n        dispatch(removeFavoriteAC(imgProps))\n    }\n\n    return (\n        <div>\n\n            {FavoriteImg.length === 0\n                ? <div> No favourites photos, add some! </div>\n                : <div className={\"image_container\"}>\n\n                    {  FavoriteImg.map(elem => {\n                        return (\n                            <div key={elem!.id}>\n                                <Heart onHeartClick={onHeartClick} imgProps={elem}/>\n                                <img key={elem!.id}\n                                className={\"image_item\"}\n                                src={`${elem!.img_src}`}\n                                alt={\"click for favorite\"}  />\n                            </div>\n                        )\n                    })\n                    }\n                </div>\n            }\n\n        </div>\n    )\n\n}\n\nexport default Favorites;\n","import React from \"react\";\n\nimport PhotosPage from \"./PhotosPage\";\nimport { Route, Switch} from \"react-router-dom\";\nimport Favorites from \"./Favorites\";\n\n\nfunction Routes() {\n    return (\n        <div>\n           <Switch>\n              <Route path={\"/\"} exact render={() => <PhotosPage/>}/>\n              <Route path={\"/photos\"} render={() => <PhotosPage/>}/>\n              <Route path={\"/favorites\"} render={() => <Favorites/>}/>\n           </Switch>\n    </div>\n);\n}\n\nexport default Routes;\n","import React from 'react';\nimport {HashRouter, NavLink} from \"react-router-dom\";\nimport \"./marsGallery.css\"\nimport Routes from \"./Routes\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppStoreType} from \"../Store/State\";\nimport {stateItem} from \"../Store/ImagesReducer\";\n\n\nfunction MarsGallery() {\n\n    // const linkSelected = useSelector<AppStoreType, stateItem[]>(state => state.Images)\n    // const dispatch=useDispatch()\n    // const isSelected = fromRedux ? \"photos_link_select\" : \"photos_link_NOselect\"\n\n    return (\n        <div>\n           <HashRouter>\n                <div>\n                    <span> <NavLink activeClassName={\"activeLink\"} to=\"/photos\">Photos </NavLink>  </span>\n                    <span> | </span>\n                    <span> <NavLink activeClassName={\"activeLink\"} to=\"/favorites\">Favorites </NavLink>  </span>\n                </div>\n                <Routes/>\n            </HashRouter>\n\n        </div>\n    );\n}\n\nexport default MarsGallery;\n","import React from 'react';\nimport './App.css';\nimport MarsGallery from \"./Features/marsGallery\";\n\n\nfunction App() {\n\n return (\n    <div className=\"App\">\n        <MarsGallery/>\n\n        <span>learn react</span>\n\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\r\nimport {ImagesReducer} from './ImagesReducer'\r\nimport {LoadStatusReducer} from './LoadStatusReducer'\r\nimport {applyMiddleware, combineReducers, createStore} from 'redux'\r\nimport { FavoriteReducer } from './FavoriteReducer'\r\nimport thunkMiddleware from 'redux-thunk'\r\n\r\n\r\nexport const rootReducer=combineReducers({\r\n    Images: ImagesReducer,\r\n    Status: LoadStatusReducer,\r\n    Favorite: FavoriteReducer })\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\nexport type AppStoreType = ReturnType<typeof rootReducer>\r\n\r\n\r\n//@ts-ignore\r\nwindow.store = store;\r\n\r\n\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./Store/State\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}