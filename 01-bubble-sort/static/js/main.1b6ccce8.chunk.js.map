{"version":3,"sources":["components/Chart/Chart.tsx","components/Header/buble.png","components/Header/Header.tsx","components/Footer/Footer.tsx","App.tsx","utils/Sort.tsx","reportWebVitals.ts","index.tsx"],"names":["Chart","className","this","props","randomArray","map","element","i","style","height","bottom","fontSize","React","Component","Header","src","bubleImg","Footer","status","onClick","startSort","newSet","App","componentDidMount","generateArray","push","Math","round","random","setState","arr","iteration","copyArray","state","sortedArr","timerId","setInterval","intervalSort","j","length","temp","sort","currentIteration","clearTimeout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iUAkCiBA,E,4JArBb,WAEC,OACG,qBAAKC,UAAW,eAAhB,SACYC,KAAKC,MAAMC,aAEZF,KAAKC,MAAMC,YAAYC,KAAI,SAACC,EAAYC,GACvC,OACG,qBACGN,UAAU,OACVO,MAAO,CAAEC,OAAQH,EAASI,OAAQJ,GAFrC,SAII,sBAAME,MAAO,CAACG,SAAU,IAAxB,SAA8BL,e,GAdrCM,IAAMC,WCXX,G,YAAA,IAA0B,mCCqBxBC,E,4JAdb,WAEC,OAEO,sBAAKb,UAAU,gBAAf,UACI,+CACA,qBAAKc,IAAKC,EAAUf,UAAW,qB,GAR1BW,IAAMC,WCsBVI,G,kKAdb,WAEC,OAEO,sBAAKhB,UAAU,gBAAf,UACI,sBAAMA,UAAW,aAAjB,SAAgCC,KAAKC,MAAMe,SAC3C,wBAAQjB,UAAW,SAAUkB,QAASjB,KAAKC,MAAMiB,UAAjD,wBACA,wBAAQnB,UAAW,SAAUkB,QAASjB,KAAKC,MAAMkB,OAAjD,4B,GATKT,IAAMC,YC8DZS,E,kDA5DX,WAAYnB,GAAa,IAAD,8BACpB,cAAMA,IAKVoB,kBAAoB,WAChB,EAAKC,iBAPe,EAUxBA,cAAgB,WAEZ,IADA,IAAIpB,EAAyB,GACpBG,EAAI,EAAGA,EAAI,GAAIA,IACpBH,EAAYqB,KAAKC,KAAKC,MAAsB,IAAhBD,KAAKE,WAErC,EAAKC,SAAS,CAACC,IAAK1B,IACpB,EAAKyB,SAAS,CAACE,UAAW,MAhBN,EAmBpBX,UAAY,WACZ,EAAKS,SAAS,CAACX,OAAQ,gBACvB,IAAIc,EAAS,YAAO,EAAKC,MAAMH,KAE3BI,EAAuB,GACvBC,EAAUC,aAAY,WACtBC,MACD,KAGCA,EAAe,WACfH,ECxCM,SAACF,GAGX,IAAK,IAAIM,EAAI,EAAGA,EAAIN,EAAUO,OAAQD,IAC9B,GAAIN,EAAUM,GAAKN,EAAUM,EAAI,GAAI,CACjC,IAAIE,EAAOR,EAAUM,GACrBN,EAAUM,GAAKN,EAAUM,EAAI,GAC7BN,EAAUM,EAAI,GAAKE,EAGtC,OAAOR,ED8BgBS,CAAKT,GAEjB,IAAIU,EAAiB,EAAKT,MAAMF,UAAU,EAC1C,EAAKF,SAAS,CAACC,IAAKI,IACpB,EAAKL,SAAS,CAACE,UAAWW,IAEJ,GAAlBA,IACOC,aAAaR,GACb,EAAKN,SAAS,CAACX,OAAQ,cAnCtC,EAAKe,MAAQ,CAACH,IAAK,GAAIZ,OAAQ,aAAca,UAAW,IAHpC,E,0CA4CxB,WAEI,OACI,sBAAK9B,UAAU,MAAf,UACI,cAAC,EAAD,IAEA,cAAC,EAAD,CAAOG,YAAaF,KAAK+B,MAAMH,MAE/B,cAAC,EAAD,CAAQV,UAAWlB,KAAKkB,UAChBC,OAAQnB,KAAKsB,cACbN,OAAQhB,KAAK+B,MAAMf,gB,GAxDzBN,IAAMC,WEGT+B,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1b6ccce8.chunk.js","sourcesContent":["import React from 'react';\nimport \"./Chart.css\"\n\n\n\n type props = {\n  // randomArray: number[]\n  // нужны какието дефолтные пропсы ??\n     randomArray?: number[]\n};\n\nclass Chart extends React.Component<props> {\n\n    render() {\n\n     return (\n        <div className={\"chartWrapper\"}>\n                  { this.props.randomArray &&\n                                                 // number [] непотходит нужно стили добавить?\n                   this.props.randomArray.map((element:any,i:number) => {\n                    return (\n                       <div\n                          className=\"char\"\n                          style={{ height: element, bottom: element }}\n                          >\n                           <span style={{fontSize: 10}}>{element}</span>\n                        </div>\n                       ) } )}\n        </div>\n      );\n    }\n  }\n\n\n  export default Chart;\n\n\n","export default __webpack_public_path__ + \"static/media/buble.b19a8653.png\";","import React from 'react';\nimport \"./Header.css\"\nimport bubleImg from \"../Header/buble.png\";\n\n\nclass Header extends React.Component {\n\n    render() {\n\n     return (\n\n            <div className=\"headerWrapper\">\n                <h1> Bubble sort </h1>\n                <img src={bubleImg} className={\"imgBubble\"} />\n            </div>\n\n      );\n    }\n  }\n\n\n  export default Header;\n\n\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react';\nimport \"./Footer.css\"\n\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\n\ntype StartSetButtonPropsType = DefaultButtonPropsType & {\n    startSort?: () => void,\n    newSet?: () => void,\n    status?:string\n}\n\nclass Footer extends React.Component<StartSetButtonPropsType> {\n\n    render() {\n\n     return (\n\n            <div className=\"footerWrapper\">\n                <span className={\"InfoStatus\"}>{this.props.status}</span>\n                <button className={\"button\"} onClick={this.props.startSort}>Start sort</button>\n                <button className={\"button\"} onClick={this.props.newSet}>New Set</button>\n            </div>\n      );\n    }\n  }\n\n\n  export default Footer;\n\n\n","import React from 'react';\nimport {sort} from \"./utils/Sort\";\nimport Chart from \"./components/Chart/Chart\";\nimport './App.css';\nimport Header from './components/Header/Header';\nimport Footer from \"./components/Footer/Footer\";\n\nexport type arrayType = number[]\nexport type stateType = { arr: arrayType, status: string, iteration: number}\n\n\nclass App extends React.Component<{}, stateType> {\n\n    constructor(props: any) {\n        super(props);\n\n        this.state = {arr: [], status: \"Not solved\", iteration: 20};\n    }\n\n    componentDidMount = () => {\n        this.generateArray()\n    }\n\n    generateArray = (): void => {\n        let randomArray: arrayType = []\n        for (let i = 0; i < 20; i++) {\n            randomArray.push(Math.round(Math.random() * 200))\n        }\n        this.setState({arr: randomArray})\n        this.setState({iteration: 20})\n    }\n\n        startSort = () => {\n        this.setState({status: \"in progress\"})\n        let copyArray = [...this.state.arr]\n\n        let sortedArr: arrayType = []\n        let timerId = setInterval(() => {\n            intervalSort()\n        }, 300)\n\n\n        let intervalSort = ():void => {\n            sortedArr = sort(copyArray)\n\n            let currentIteration=this.state.iteration-1\n            this.setState({arr: sortedArr})\n            this.setState({iteration: currentIteration})\n\n            if (currentIteration==0) {\n                       clearTimeout(timerId);\n                       this.setState({status: \"Solved\"})\n            }\n        }\n    }\n\n\n    render() {\n\n        return (\n            <div className=\"App\">\n                <Header/>\n\n                <Chart randomArray={this.state.arr}/>\n\n                <Footer startSort={this.startSort}\n                        newSet={this.generateArray}\n                        status={this.state.status}/>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import {arrayType} from \"../App\"\n\n// почему не работает эспортированная типизация ?\nexport const sort=(copyArray:arrayType):arrayType=>{\n//    export const Sort=(copyArray:number[]):number[]=>{\n\n        for (let j = 0; j < copyArray.length; j++) {\n                if (copyArray[j] > copyArray[j + 1]) {\n                    let temp = copyArray[j];\n                    copyArray[j] = copyArray[j + 1];\n                    copyArray[j + 1] = temp;\n                }\n        }\n return copyArray\n\n}\n\n\n\n\n\n\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}