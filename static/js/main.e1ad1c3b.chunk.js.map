{"version":3,"sources":["Redux/Reducer.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["initState","number","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","state","action","type","payload","undefined","App","balance","useSelector","dispatch","useDispatch","className","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAIMA,G,YAA0B,CAACC,OAAQ,I,qBCUnCC,EAAmBC,OAAOC,sCAAwCC,IAE3DC,EAAQC,aD0BE,WAA6C,IAA5CC,EAA2C,uDAArCR,EAAWS,EAA0B,uCAE/D,OAAQA,EAAOC,MAEX,IAAK,iBACD,MAAO,CAACT,OAAQQ,EAAOE,SAE3B,IAAK,UAGL,IAAK,UACA,MAAO,CAACV,OAAOO,EAAMP,OAASQ,EAAOE,SAE1C,IAAK,uBACA,MAAO,CAACV,OAAOO,EAAMP,OAASO,EAAMP,OAASQ,EAAOE,QAAS,KAElE,IAAK,QACA,MAAO,CAACV,OAAOO,EAAMP,OAASQ,EAAOE,SAE1C,QACI,OAAOH,UC9CuBI,EAAWV,KAErDC,OAAOG,MAAQA,EAyCAO,MArCf,WAEI,IAAMC,EAAQC,aAAkC,SAAAP,GAAK,OAAEA,EAAMP,UACvDe,EAASC,cAmBjB,OACE,sBAAKC,UAAU,MAAf,UAEG,4CAAgBJ,EAAhB,OAGH,wBAAQK,QAvBc,WACpBH,EDuCgC,CAACN,KAAM,iBAAkBC,QAAS,OCjBpE,6BACA,wBAAQQ,QArBO,WACbH,EDqC0B,CAACN,KAAM,UAAWC,QAAS,OCjBvD,qBACA,wBAAQQ,QAnBO,WACbH,EDmC0B,CAACN,KAAM,UAAWC,QAAS,OCjBvD,qBACA,wBAAQQ,QAjBU,WAChBH,EDiC6B,CAACN,KAAM,uBAAwBC,QAAS,MCjBvE,wBACA,wBAAQQ,QAfK,WACXH,ED+BwB,CAACN,KAAM,QAASC,QAAS,OCjBnD,uBCxCWS,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,CAAUzB,MAAOA,EAAjB,SACF,cAAC,EAAD,QAGF0B,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e1ad1c3b.chunk.js","sourcesContent":["\ntype initStateType = {number: number};\ntype Action = { type: string, payload: number }\n\nconst initState:initStateType = {number: 0};\n\n//---------------------------------------------------------------------\nexport interface UpdateBalanceAction  {\n    type: 'UPDATE_BALANCE'\n    payload: number\n}\n\nexport interface CreditAction1 extends Action {\n    type: 'CREDIT1';\n    payload: number\n}\n\nexport interface CreditAction2 extends Action {\n    type: 'CREDIT2';\n    payload: number\n}\n\nexport interface SubtractPercentageAction  {\n    type: 'SET_BALANCE_WITH_TAX';\n    payload: number\n}\n\nexport interface DebitAction  {\n    type: 'DEBIT';\n    payload: number\n}\n\nexport type BalanceAction = UpdateBalanceAction |\n    CreditAction1 |\n    CreditAction2 |\n    SubtractPercentageAction |\n    DebitAction;\n//-------------------------------------------------------------------------\n\n\n\n\nexport const reducer = (state=initState, action: BalanceAction) => {\n\n    switch (action.type) {\n\n        case 'UPDATE_BALANCE':\n            return {number: action.payload}\n\n        case 'CREDIT1':\n            return {number:state.number - action.payload}\n\n        case 'CREDIT2':\n             return {number:state.number - action.payload}\n\n        case 'SET_BALANCE_WITH_TAX':\n             return {number:state.number - state.number * action.payload /100}\n\n        case 'DEBIT':\n             return {number:state.number + action.payload}\n\n        default:\n            return state\n    }\n\n}\n\nexport const updateBalanceAC = () => ({type: 'UPDATE_BALANCE', payload: 1000.0})\nexport const credit1AC = () => ({type: 'CREDIT1', payload: 200.0})\nexport const credit2AC = () => ({type: 'CREDIT2', payload: 100.0})\nexport const setBalanceAC = () => ({type: 'SET_BALANCE_WITH_TAX', payload: 14.0})\nexport const debitAC = () => ({type: 'DEBIT', payload: 250})\n\n","import React from 'react';\nimport './App.css';\nimport {credit1AC, credit2AC, debitAC, setBalanceAC, updateBalanceAC} from \"./Redux/Reducer\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {reducer} from \"./Redux/Reducer\";\n\n// -----------------------------STORE with redux dev tool------------------\nimport { createStore, compose } from \"redux\";\n\n  declare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport const store = createStore(reducer, undefined, composeEnhancers());\n//@ts-ignore\nwindow.store = store;\nexport type AppStoreType = ReturnType<typeof reducer>\n// ----------------------------------------------------------------------\n\nfunction App() {\n\n    const balance=useSelector<AppStoreType, number>(state=>state.number)\n    const dispatch=useDispatch()\n\n    const updateBalance = function handler() {\n      dispatch(updateBalanceAC())\n   }\n   const credit1 = function handler() {\n      dispatch(credit1AC())\n   }\n   const credit2 = function handler() {\n      dispatch(credit2AC())\n   }\n   const setBalance = function handler() {\n      dispatch(setBalanceAC())\n   }\n   const debit = function handler() {\n      dispatch(debitAC())\n   }\n\n\n  return (\n    <div className=\"App\">\n\n       <div> balance:{ balance } </div>\n\n\n    <button onClick={updateBalance}>updateBalanceAC</button>\n    <button onClick={credit1}>credit1</button>\n    <button onClick={credit2}>credit2</button>\n    <button onClick={setBalance}>setBalance</button>\n    <button onClick={debit}>debit</button>\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n    <App />\n          </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}